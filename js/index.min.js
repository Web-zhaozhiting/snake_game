(function () {
    var a = {
        getRandom: function (c, b) {
            return Math.floor(Math.random() * (b - c + 1)) + c
        }
    };
    window.Tools = a
})();
// (function () {
//     // 因为只有一个对象，所以用不到构造函数写法
//     var Tools = {
//         getRandom: function (min, max) {
//             return Math.floor(Math.random() * (max - min + 1)) + min;
//         }
//     }
//     window.Tools = Tools;
// })();
(function () {
    var b = [];

    function a(d) {
        d = d || {};
        this.x = d.x || 0;
        this.y = d.y || 0;
        this.width = d.width || 20;
        this.height = d.height || 20;
        this.color = d.color || "red";
        this.parent = parent
    }
    a.prototype.render = function (d) {
        c();
        this.x = Tools.getRandom(0, d.offsetWidth / this.width - 1) * this.width;
        this.y = Tools.getRandom(0, d.offsetHeight / this.height - 1) * this.height;
        var e = document.createElement("div");
        d.appendChild(e);
        b.push(e);
        e.style.left = this.x + "px";
        e.style.top = this.y + "px";
        e.style.width = this.width + "px";
        e.style.height = this.height + "px";
        e.style.backgroundColor = this.color;
        e.style.position = "absolute"
    };

    function c() {
        for (var d = b.length - 1; d >= 0; d--) {
            b[d].parentNode.removeChild(b[d]);
            b.splice(d, 1)
        }
    }
    window.Food = a
})();
(function () {
    var c = [];

    function b(d) {
        d = d || {};
        this.width = d.width || 20;
        this.height = d.height || 20;
        this.direction = d.direction || "right";
        this.body = [{
            x: 3,
            y: 2,
            color: "red"
        }, {
            x: 2,
            y: 2,
            color: "blue"
        }, {
            x: 1,
            y: 2,
            color: "blue"
        }]
    }
    b.prototype.render = function (g) {
        a();
        for (var f = 0, d = this.body; f < d.length; f++) {
            var e = this.body[f];
            var h = document.createElement("div");
            g.appendChild(h);
            c.push(h);
            h.style.position = "absolute";
            h.style.width = this.width + "px";
            h.style.height = this.height + "px";
            h.style.left = e.x * this.width + "px";
            h.style.top = e.y * this.height + "px";
            h.style.backgroundColor = e.color
        }
    };
    b.prototype.move = function (h, j) {
        for (var f = this.body.length - 1; f > 0; f--) {
            this.body[f].x = this.body[f - 1].x;
            this.body[f].y = this.body[f - 1].y
        }
        var e = this.body[0];
        switch (this.direction) {
            case "right":
                e.x += 1;
                break;
            case "left":
                e.x -= 1;
                break;
            case "top":
                e.y -= 1;
                break;
            case "bottom":
                e.y += 1;
                break
        }
        var d = e.x * this.width;
        var k = e.y * this.height;
        if (d === j.x && k === j.y) {
            var g = this.body[this.body.length - 1];
            this.body.push({
                x: g.x,
                y: g.y,
                color: g.color
            });
            j.render(h)
        }
    };

    function a() {
        for (var d = c.length - 1; d >= 0; d--) {
            c[d].parentNode.removeChild(c[d]);
            c.splice(d, 1)
        }
    }
    window.Snake = b
})();
(function () {
    var c;

    function d(e) {
        this.food = new Food();
        this.snake = new Snake();
        this.map = e;
        c = this
    }
    d.prototype.start = function () {
        this.food.render(this.map);
        this.snake.render(this.map);
        b();
        a()
    };

    function b() {
        var e = setInterval(function () {
            this.snake.move(this.map, this.food);
            var h = this.map.offsetWidth / this.snake.width;
            var g = this.map.offsetHeight / this.snake.height;
            var f = this.snake.body[0].x;
            var i = this.snake.body[0].y;
            if (f < 0 || f >= h) {
                alert("游戏结束");
                clearInterval(e);
                return
            }
            if (i < 0 || i >= g) {
                alert("游戏结束");
                clearInterval(e);
                return
            }
            c.snake.render(c.map)
        }.bind(c), 150)
    }

    function a() {
        document.addEventListener("keydown", function (f) {
            switch (f.keyCode) {
                case 37:
                    c.snake.direction = "left";
                    break;
                case 38:
                    c.snake.direction = "top";
                    break;
                case 39:
                    c.snake.direction = "right";
                    break;
                case 40:
                    c.snake.direction = "bottom";
                    break
            }
        }, false)
    }
    window.Game = d
})();
(function () {
    var b = document.getElementById("map");
    var a = new Game(b);
    a.start()
})();